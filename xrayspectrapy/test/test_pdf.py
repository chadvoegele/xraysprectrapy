import unittest
import xrayspectrapy as xsp

class PairDistFunctionTests(unittest.TestCase):
    def data_for_test1(self):
        return xsp.Structure([xsp.Atom(1.2455, 0.5367, -0.0729),
                              xsp.Atom(0.9239, -0.9952, 0.0237),
                              xsp.Atom(-0.1226, -0.7041, 1.1548)])

    def data_for_test2(self):
        return xsp.Structure([xsp.Atom(0.375, 0.375, 0.375),
                              xsp.Atom(0.125, 0.125, 0.625),
                              xsp.Atom(0.375, 0.875, 0.875)])

    def data_for_si_mp149(self):
        """Data from https://materialsproject.org/materials/mp-149/"""
        return xsp.Structure([xsp.Atom(0.375,0.375,0.375),
                              xsp.Atom(0.125,0.125,0.625),
                              xsp.Atom(0.375,0.875,0.875),
                              xsp.Atom(0.125,0.625,0.125),
                              xsp.Atom(0.875,0.375,0.875),
                              xsp.Atom(0.625,0.125,0.125),
                              xsp.Atom(0.875,0.875,0.375),
                              xsp.Atom(0.625,0.625,0.625)])

    def data_for_gaas(self):
        s = xsp.Structure([xsp.Atom(0.00,0.00,0.00),
                           xsp.Atom(0.00,0.50,0.50),
                           xsp.Atom(0.50,0.00,0.50),
                           xsp.Atom(0.50,0.50,0.00),
                           xsp.Atom(0.25,0.25,0.25),
                           xsp.Atom(0.75,0.75,0.25),
                           xsp.Atom(0.75,0.25,0.75),
                           xsp.Atom(0.25,0.75,0.75)])
        c = 5.6536998749
        return (c, s)

    def test_pairwise_distances(self):
        expectedDistances = [0, 1.5683, 2.2178, 1.5683, 0, 1.5682,\
                2.2178, 1.5682, 0]
        structure = self.data_for_test1()
        distances = xsp.pdf.calc_distances(structure)
        
        for i in range(0, len(expectedDistances)):
            self.assertAlmostEqual(expectedDistances[i], distances[i], 4)

    def test_distances_with_repitition(self):
        (c, s) = self.data_for_gaas()
        distances = xsp.pdf.calc_distances_with_repetition(s, 10/c, False)
        distances = [c*x for x in distances]
        expectedDistances = [2.4481, 2.4481, 2.4481, 2.4481, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 5.6537, 5.6537,
            5.6537, 5.6537, 5.6537, 5.6537, 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925,
            2.4481, 2.4481, 2.4481, 2.4481, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 5.6537, 5.6537, 5.6537, 5.6537,
            5.6537, 5.6537, 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.7925, 9.7925,
            9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 2.4481, 2.4481,
            2.4481, 2.4481, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.7925, 9.7925, 9.7925, 9.7925,
            9.7925, 9.7925, 9.7925, 9.7925, 2.4481, 2.4481, 2.4481, 2.4481,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925,
            9.7925, 9.7925, 2.4481, 2.4481, 2.4481, 2.4481, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 5.6537, 5.6537,
            5.6537, 5.6537, 5.6537, 5.6537, 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925,
            2.4481, 2.4481, 2.4481, 2.4481, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 5.6537, 5.6537, 5.6537, 5.6537,
            5.6537, 5.6537, 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.7925, 9.7925,
            9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 2.4481, 2.4481,
            2.4481, 2.4481, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.7925, 9.7925, 9.7925, 9.7925,
            9.7925, 9.7925, 9.7925, 9.7925, 2.4481, 2.4481, 2.4481, 2.4481,
            3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978, 3.9978,
            3.9978, 3.9978, 3.9978, 3.9978, 4.6878, 4.6878, 4.6878, 4.6878,
            4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878, 4.6878,
            5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 5.6537, 6.161 , 6.161 ,
            6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 , 6.161 ,
            6.161 , 6.161 , 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243, 6.9243,
            6.9243, 6.9243, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444, 7.3444,
            7.3444, 7.3444, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955,
            7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 7.9955, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619,
            8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.3619, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393,
            8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 8.9393, 9.2684, 9.2684,
            9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684, 9.2684,
            9.2684, 9.2684, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925, 9.7925,
            9.7925, 9.7925]

        expectedDistances.sort()
        distances.sort()
        for i in range(0, len(expectedDistances)):
            self.assertAlmostEqual(expectedDistances[i], distances[i], 4)

    def test_gaussian_blur(self):
        distances = [0.049, 0.098, 0.147, 0.196, 0.245, 0.294, 0.343, 0.392,
                0.441, 0.49, 0.539, 0.588, 0.637, 0.686, 0.735, 0.784, 0.833,
                0.882, 0.931, 0.98, 1.029, 1.078, 1.127, 1.176, 1.225, 1.274,
                1.323, 1.372, 1.421, 1.47, 1.519, 1.568, 1.617, 1.666, 1.715,
                1.764, 1.813, 1.862, 1.911, 1.96, 2.009, 2.058, 2.107, 2.156,
                2.205, 2.254, 2.303, 2.352, 2.401, 2.45, 2.499, 2.548, 2.597,
                2.646, 2.695, 2.744, 2.793, 2.842, 2.891, 2.94, 2.989, 3.038,
                3.087, 3.136, 3.185, 3.234, 3.283, 3.332, 3.381, 3.43, 3.479,
                3.528, 3.577, 3.626, 3.675, 3.724, 3.773, 3.822, 3.871, 3.92,
                3.969, 4.018, 4.067, 4.116, 4.165, 4.214, 4.263, 4.312, 4.361,
                4.41, 4.459, 4.508, 4.557, 4.606, 4.655, 4.704, 4.753, 4.802,
                4.851, 4.9]
        frequencies = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 24, 0, 0, 48, 0, 0, 0, 0, 0, 0, 8, 0, 24, 0, 0,
                0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0,
                24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8]
        expectedFreqs = [0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
                0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
                0.00002, 0.00019, 0.00144, 0.00872, 0.04152, 0.15552, 0.45818,
                1.06168, 1.93499, 2.77389, 3.12774, 2.77417, 1.93715, 1.07476,
                0.52046, 0.38881, 0.72879, 1.60124, 2.90392, 4.16102, 4.69158,
                4.16084, 2.90248, 1.59255, 0.68755, 0.23545, 0.07542, 0.07593,
                0.23977, 0.71371, 1.71712, 3.36906, 5.53537, 7.87660, 9.96589,
                11.22490, 10.98028, 9.03185, 6.12909, 3.53869, 2.15174, 2.12350,
                3.10437, 4.49308, 5.55642, 5.68578, 4.81630, 3.59815, 3.04481,
                3.89306, 6.04261, 8.38467, 9.39630, 8.32384, 5.80524, 3.18508,
                1.37472, 0.46802, 0.13329, 0.06771, 0.16013, 0.46090, 1.07481,
                1.99728, 3.00718, 3.81497, 4.36641, 4.83747, 5.22251, 5.14974,
                4.31636, 2.94400, 1.60124, 0.68871, 0.23347, 0.06230, 0.01308,
                0.00217, 0.00037, 0.00075, 0.00436, 0.02078, 0.07802, 0.23210,
                0.55388, 1.08458, 1.79864, 2.61627]
        t = 0.005
        smoothedFrequencies = xsp.pdf.gaussian_blur(distances, frequencies, t)

        for i in range(0, len(expectedFreqs)):
            self.assertAlmostEqual(expectedFreqs[i], smoothedFrequencies[i], 4)

if __name__ == '__main__':
    unittest.main()
